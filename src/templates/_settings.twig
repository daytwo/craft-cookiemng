{# @var plugin \daytwo\cookiemng\CookieMng #}
{# @var settings \daytwo\cookiemng\models\Settings #}

{% import '_includes/forms.twig' as forms %}

{% set cookieEnabled = getenv('CM_COOKIE_ENABLED')|number_format != 1 ? false : true %}
{% set cookieName = getenv('CM_COOKIE_NAME') is same as('CM_COOKIE_NAME') ? 'craft_daytwo_cookiemng' : getenv('CM_COOKIE_NAME') %}
{% set cookieDomain = getenv('CM_COOKIE_DOMAIN') is same as('CM_COOKIE_DOMAIN') ? '' : getenv('CM_COOKIE_DOMAIN') %}
{% set cookieExpiry = getenv('CM_COOKIE_EXPIRY') is same as('CM_COOKIE_EXPIRY') ? 365 : getenv('CM_COOKIE_EXPIRY')|number_format %}
{% set cookiePath = getenv('CM_COOKIE_PATH') is same as('CM_COOKIE_PATH') ? '/' : getenv('CM_COOKIE_PATH') %}
{% set cookieSecure = getenv('CM_COOKIE_SECURE')|number_format != 1 ? false : true %}
{% set cookieGoogleEnabled = getenv('CM_COOKIE_GOOGLE_ENABLED')|number_format != 1 ? false : true %}

<div style="pointer-events:none" class="flex-fields">

    <h2>Cookie Name</h2>
    {{ forms.lightswitchField({
        label: 'Enable cookie bar',
        on: cookieEnabled,
        disabled:true,
        static: true,
        fieldClass: 'width-25',
        instructions: 'Define if cookie bar is active or not. If not active, the cookie settings will not be displayed and google consent will nto be dispatched (.env var CM_COOKIE_ENABLED)',
    }) }}

    {{ forms.textField({
        label: 'Cookie Name',
        value: cookieName,
        disabled:true,
        fieldClass: 'width-25',
        instructions: 'The cookie name that will be used to store the user preferences. This should be unique to your site and preferably per enviroment to avoid conflicts (.env var CM_COOKIE_NAME)',
    }) }}

    {{ forms.textField({
        label: 'Cookie Domain',
        value: cookieDomain,
        disabled:true,
        fieldClass: 'width-25',
        instructions: 'The domain that the cookie will be set on. Leave blank to use the current domain (.env var CM_COOKIE_DOMAIN)',
    }) }}

    {{ forms.textField({
        label: 'Cookie max-age',
        type:'number',
        value: cookieExpiry,
        disabled:true,
        fieldClass: 'width-25',
        instructions: 'Cookie duration in days (.env var CM_COOKIE_EXPIRY)',
    }) }}

    {{ forms.textField({
        label: 'Cookie path',
        value: cookiePath,
        required: false,
        disabled:true,
        fieldClass: 'width-25',
        instructions: 'Cookie path. Recommented is to use "/" (.env var CM_COOKIE_PATH)',
    }) }}


    {{ forms.lightswitchField({
        label: 'User secure cookie',
        on: cookieSecure,
        required: false,
        disabled:true,
        static: true,
        fieldClass: 'width-25',
        instructions: 'Recommened to use "true". When in localhost it will always use "false" (.env var CM_COOKIE_SECURE)',
    }) }}

    
    {{ forms.lightswitchField({
        label: 'Google Consent',
        on: cookieGoogleEnabled,
        required: false,
        disabled:true,
        static: true,
        fieldClass: 'width-25',
        instructions: 'Enable dispatch of Google Consent Mode v2? (.env var CM_COOKIE_GOOGLE_ENABLED)',
    }) }}

    <hr/>
</div>
<div class="flex-fields">
    
    <hr/>
    
    <h2>Theme</h2>
    
    {{ forms.selectField({
        label: "Theme",
        instructions: 'Choose your theme',
        name: 'theme',
        options: {"blue":"Blue","green":"Green","red":"Red","yellow":"Yellow","purple":"Purple","black":"Black"},
        value: settings.getTheme(),
        fieldClass: 'width-25',
        required: true,
    }) }}

    {{ forms.lightswitchField({
        label: "Inverted",
        name: 'inverted',
        instructions: "Use theme color as background instead of accent color",
        fieldClass: 'width-25',
        on: settings.getInverted()
    }) }}

    {{ forms.lightswitchField({
        label: "Use corner panel",
        name: 'cornerPanel',
        instructions: "Use popup preferences on the corner instead of the bottom (user interaction will not be blocked if enabled)",
        fieldClass: 'width-25',
        on: settings.getCornerPanel()
    }) }}

    {{ forms.textField({
        label: "Custom z-index",
        name: 'zIndex',
        instructions: "Define a custom z-index to place the cookie settings panel",
        fieldClass: 'width-25',
        value: settings.getZIndex()
    }) }}

    {{ forms.lightswitchField({
        label: "Block user interaction",
        name: 'blockBackground',
        instructions: "Block user interaction until the cookie settings is accepted or dismissed.",
        fieldClass: 'width-25',
        on: settings.getBlockBackground()
    }) }}

    <hr/>


    <h2>Details</h2>
    
    {{ forms.textField({
        label: "Header",
        instructions: 'Popup header',
        name: 'cookiesHeader',
        value: settings.getCookiesHeader(),
        fieldClass: 'width-25',
        required: true,
    }) }}

    {{ forms.textAreaField({
        label: "Description",
        instructions: 'Popup description',
        name: 'cookiesDescription',
        fieldClass: 'width-75',
        rows:3,
        value: settings.getCookiesDescription(),
        required: true,
    }) }}

    {{ forms.textField({
        label: "Read more link label",
        name: 'cookiesReadMore',
        value: settings.getCookiesReadMore(),
        fieldClass: 'width-25',
        required: true,
    }) }}

     {{ forms.autosuggestField({
        label: "Read more link url",
        name: 'cookiesReadMoreLink',
        instructions: 'Leave empty for skipping the read more link',
        value: settings.getCookiesReadMoreLink(),
        suggestEnvVars: true,
    }) }}

    <hr/>
    
    <h2>Button labels</h2>


    {{ forms.textField({
        label: "Accept all",
        name: 'acceptAllButton',
        fieldClass: 'width-25',
        value: settings.getAcceptAllButton(),
    }) }}

    {{ forms.textField({
        label: "Accept functional",
        name: 'acceptFunctionalButton',
        fieldClass: 'width-25',
        value: settings.getAcceptFunctionalButton(),
    }) }}

    {{ forms.textField({
        label: "Deny all",
        name: 'denyAllButton',
        fieldClass: 'width-25',
        value: settings.getDenyAllButton(),
    }) }}

    {{ forms.textField({
        label: "Save",
        name: 'saveButton',
        fieldClass: 'width-25',
        value: settings.getSaveButton(),
    }) }}

    {{ forms.textField({
        label: "Customize",
        name: 'customizeButton',
        fieldClass: 'width-25',
        value: settings.getCustomizeButton(),
    }) }}

    {{ forms.textField({
        label: "Close/Dismiss",
        name: 'closeButton',
        fieldClass: 'width-25',
        value: settings.getCloseButton(),
    }) }}

    <hr/>

<h2>Functional</h2>
{{ forms.lightswitchField({
    label: 'Use functional cookies',
    name: 'functionalCookies',
    on: settings.getFunctionalCookies(),
    disabled: true,
    fieldClass: 'width-25',
    inputClass: 'disabled',
    fieldStyle: 'opacity:0.5',
    instructions: 'Display the functional cookie in the preferences. The event will be triggered when user accepts the functional cookies (value: functional).',
}) }}

{{ forms.textField({
    label: "Functional cookie title",
    name: 'functionalTitle',
    fieldClass: 'width-25',
    value: settings.getFunctionalTitle(),
}) }}

{{ forms.textAreaField({
    label: "Functional cookie description",
    name: 'functionalDescription',
    rows: 2,
    fieldClass: 'width-50',
    value: settings.getFunctionalDescription(),
}) }}

<hr />

<h2>Analytics</h2>
{{ forms.lightswitchField({
    label: 'Use analytics cookies',
    name: 'analyticsCookies',
    on: settings.getAnalyticsCookies(),
    fieldClass: 'width-25',
    instructions: 'Display the analytics cookie in the preferences. The event will be triggered when user accepts the analytics cookies (value: analytics).',
}) }}


{{ forms.textField({
    label: "Analytics Title"|t('cookiemng'),
    name: 'analyticsTitle',
    fieldClass: 'width-25',
    value: settings.getAnalyticsTitle(),
}) }}


{{ forms.textAreaField({
    label: "Analytics Description"|t('cookiemng'),
    name: 'analyticsDescription',
    rows: 2,
    fieldClass: 'width-50',
    value: settings.getAnalyticsDescription(),
}) }}

<hr />


<h2>Advertising</h2>
{{ forms.lightswitchField({
    label: 'Use advertising cookies',
    name: 'advertisingCookies',
    on: settings.getAdvertisingCookies(),
    fieldClass: 'width-25',
    instructions: 'Display the advertising cookie in the preferences. The event will be triggered when user accepts the advertising cookies (value: advertising).',
}) }}

{{ forms.textField({
    label: "Advertising Title"|t('cookiemng'),
    name: 'advertisingTitle',
    fieldClass: 'width-25',
    value: settings.getAdvertisingTitle(),
}) }}

{{ forms.textAreaField({
    label: "Advertising Description"|t('cookiemng'),
    name: 'advertisingDescription',
    rows: 2,
    fieldClass: 'width-50',
    value: settings.getAdvertisingDescription(),
}) }}

<hr/>

<h2>Personalization</h2>
{{ forms.lightswitchField({
    label: 'Use personalization cookies',
    name: 'personalizationCookies',
    on: settings.getPersonalizationCookies(),
    fieldClass: 'width-25',
    instructions: 'Display the personalization cookie in the preferences. The event will be triggered when user accepts the personalization cookies (value: personalization).',
}) }}

{{ forms.textField({
    label: "Personalization Title"|t('cookiemng'),
    name: 'personalizationTitle',
    fieldClass: 'width-25',
    value: settings.getPersonalizationTitle(),
}) }}

{{ forms.textAreaField({
    label: "Personalization Description"|t('cookiemng'),
    name: 'personalizationDescription',
    rows: 2,
    fieldClass: 'width-50',
    value: settings.getPersonalizationDescription(),
}) }}

<!--
<hr/>

<h2>Custom (extra)</h2>

{{ forms.lightswitchField({
    label: 'Use extra cookies',
    name: 'extraCookies',
    on: settings.getExtraCookies(),
    fieldClass: 'width-25',
    instructions: 'Display and extra cookie in the preferences. The event will be triggered when user accepts the extra cookies (value: {the cookie property bellow}).',
}) }}

{{ forms.textField({
    label: "Cookie property"|t('cookiemng'),
    name: 'extraCookieProperty',
    fieldClass: 'width-25',
    value: settings.getExtraCookieProperty(),
}) }}

{{ forms.textField({
    label: "Extra Title"|t('cookiemng'),
    name: 'extraTitle',
    fieldClass: 'width-25',
    value: settings.getExtraTitle(),
}) }}

{{ forms.textAreaField({
    label: "Extra Description"|t('cookiemng'),
    name: 'extraDescription',
    rows: 2,
    fieldClass: 'width-25',
    value: settings.getExtraDescription(),
}) }}
</div>
-->